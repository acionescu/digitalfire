{
	"title": "The atom",
	"desc": "Tries to simulate an atom as the effect of the dynamics between a strong nuclear force flavour (DEM) and an electromagnetic force flavour (EM). Intersting enough, you can only obtain this effect by combining both of them. The particles forming the nucleus have a positive charge about 4000 times more than the charge of the blue particles, which is negative. We also throw in some gravity, but with a very small influence. The empty cells simply show the superposition of the fields acting there, where white is for big positive values and black for big negative values. You can play with the ratios of each force to get different effects.",
	"types":{
		"grcell":{
			"params":{
				"type":"grcell",
				/* minimum move period - how many iterations a cell should wait before trying to move again */
				"MMP": 0,
				/* minimum move energy - the minimum energy required for a cell to move */
				"MME": 0,
				"fields":{
                                        "DEM":{
						"fieldRatio":1
					},
					"EM":{
						"fieldRatio":0.7
					},
					"G":{
						"fieldRatio":0.00003
					}
				}
			}
		}
	},
	"setup": {
	"config":{
		"spherical":true
	},
		"cells": [
			{
				"pos": [
					60,
					30
				],
				"type":"grcell"
			},
			{
				"pos": [
					45,
					60
				],
				"type":"grcell"
			},
			{
				"pos": [
					70,
					70
				],
				"type":"grcell"
			},
			{
				"pos": [
					65,
					55
				],
				"type":"grcell"
			},
			{
				"pos": [
					35,
					45
				],
				"type":"grcell"
			},
			{
				"pos": [
					55,
					55
				],
				"type":"grcell"
			},
			{
				"pos": [
					0,
					55
				],
				"type":"grcell"
			},
			{
				"pos": [
					100,
					76
				],
				"type":"grcell"
			},
			{
				"pos": [
					55,
					0
				],
				"type":"grcell"
			},
			{
				"pos": [
					35,
					100
				],
				"type":"grcell"
			}
		]
	},
	"genes": {
		"ginit": "C.A < 7 && C.GG < 100 -> V.color='white'; OFF; V.MT=0;V.CV=0;V.CD=0; V.PX= POS.X - 50; V.PY=POS.Y-50; V.DIST=(V.PX*V.PX+V.PY*V.PY);  R; SRM(1); V.CRAD=100; V.BMIN=-3; V.BR=2*ABS(V.BMIN); V.BSTEP=V.BR/14; ",
		"alloff": "C.GG > 0 && C.A==0 -> OFF;",
		"srcon": "(C.GG==0 || (C.GG%1==0)) && C.A ==10 && V.DIST <V.CRAD -> SETS(40000); V.color='red';",
		"setneg": "(C.GG==0 || ((C.GG+1)%19==0)) && C.A ==10 && V.DIST >V.CRAD-> SETS(-10); V.color='blue';",
                "srconout": "(C.GG==0 || (C.GG%20==0)) && C.A ==10 && V.DIST >V.CRAD -> SETS(-10); V.color='red';",
		"rop": "C.A > 1 && C.CC ==1 -> COMPUTEDEMF; COMPUTEEMF; COMPUTEGF; COMPUTESP; V.GRA=C.G; V.GM=C.GMAG; V.GD=C.GDIR;",
		"updatet": "C.A > 10 && C.S!=0 && C.GDIR >=0 -> V.MT=V.MT+1;",
		"updatev": "V.MT >= V.MMP -> V.CV=C.GMAG-C.G; V.CD=V.CD + V.CV; V.MDIR=C.GDIR; V.MME=ABS(C.G);",
		"move": "C.S !=0 && C.GMAG> V.MME && V.MDIR > -1 -> V.MT=0;V.CV=0;V.CD=0; SMD(V.MDIR); MOVE;",
		"poscol": "C.A > 1  && C.S > 0  -> V.color='red';",
		"negcol": "C.A > 1  && C.S < 0  -> V.color='blue';",
		"con0": "C.A > 1 -> V.offColor='#000000'; ",
		"con14": "C.A > 1  -> V.GSTEP=Math.min(Math.max((C.G-V.BMIN)/V.BSTEP,0),15); V.GCOLOR=Math.round(V.GSTEP)*1118481;  V.offColor= '#'+(V.GCOLOR).toString(16).padStart(6, '0');"
	}
}